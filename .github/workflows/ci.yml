name: 'CI'
description: 'Continuous Integration workflow for the project'

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]
  workflow_dispatch:
    inputs:
      language:
        description: 'Language to check'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - rust
          - node

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rust-check:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.language == 'all' || github.event.inputs.language == 'rust' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        working-directory: src-tauri

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Rust dependencies
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Run cargo check (compile test)
        run: cargo check --all

      - name: Run Clippy (linting)
        run: cargo clippy --all -- -D warnings

      - name: Run rustfmt (format check)
        run: cargo fmt --all -- --check

  node-check:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.language == 'all' || github.event.inputs.language == 'node' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install

      - name: Run lint
        run: pnpm lint

      - name: Run format check
        run: pnpm exec prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}"

      - name: Build
        run: pnpm build
